{"ast":null,"code":"import _classCallCheck from\"/Users/homebase/Desktop/dreadful-visitation-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/homebase/Desktop/dreadful-visitation-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/homebase/Desktop/dreadful-visitation-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/homebase/Desktop/dreadful-visitation-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import*as d3 from'd3';import'../css/maps.css';import{selection}from'd3';import{jsx as _jsx}from\"react/jsx-runtime\";var secretWeekSelector=1;var PlagueMap=/*#__PURE__*/function(_React$Component){_inherits(PlagueMap,_React$Component);var _super=_createSuper(PlagueMap);function PlagueMap(){_classCallCheck(this,PlagueMap);return _super.apply(this,arguments);}_createClass(PlagueMap,[{key:\"componentDidMount\",value:function componentDidMount(){this.drawChart();}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState){if(prevProps.selector!==this.props.selector){console.log('b: '+this.props.selector);this.updateChart();}}},{key:\"updateChart\",value:function updateChart(){secretWeekSelector=this.props.selector;console.log('t:'+this.props.selector);var svg=this.svg;var g=svg.select('g');console.log(g.size());var mapLayer=g.select('g.map-layer');console.log(mapLayer.size());var color=d3.scaleThreshold().domain([1,30,60,90,120,150,180,210,240,270,300,330,700]).range([\"#efe6b4\",\"#f6d27f\",\"#fdc14a\",\"#fb9d22\",\"#f57e00\",'#ec720f',\"#ea5110\",\"#e22828\",'#bd251d',\"#ab212a\",'#88202a',\"#762334\",\"#4e1824\"]);// get weekly count\nfunction pCount(d){var week='week'+secretWeekSelector;console.log('WeekCount:'+week);return d.properties[week];}// Get province color\nfunction fillFn(d){var c=pCount(d);return color(c);}var all=mapLayer.selectAll('path');console.log(all.size());all.style('fill',function(d){return fillFn(d);});}},{key:\"drawChart\",value:function drawChart(){var width=this.props.width,height=this.props.height,centered;secretWeekSelector=this.props.selector;console.log('t:'+this.props.selector);// Define color scale\nvar color=d3.scaleThreshold().domain([1,30,60,90,120,150,180,210,240,270,300,330,700]).range([\"#efe6b4\",\"#f6d27f\",\"#fdc14a\",\"#fb9d22\",\"#f57e00\",'#ec720f',\"#ea5110\",\"#e22828\",'#bd251d',\"#ab212a\",'#88202a',\"#762334\",\"#4e1824\"]);var projection=d3.geoMercator().scale(200000)// Center the Map in London\n.center([-0.08629450633040443,51.5231191276096]).translate([width/2,height/2]);var path=d3.geoPath().projection(projection);// Set svg width & height\nvar svg=this.svg.attr('width',width).attr('height',height);// Add background\nsvg.append('rect').attr('class','background').attr('width',width).attr('height',height).on('click',clicked);var g=svg.append('g');var effectLayer=g.append('g').classed('effect-layer',true);var mapLayer=g.append('g').classed('map-layer',true);var chartLayer=g.append('g').classed('chart-layer',true);var bigText=g.append('text').classed('big-text',true).attr('x',20).attr('y',45);var countText=g.append('text').classed('count-text',true).attr('x',23).attr('y',70);// Load map data\nd3.json(this.props.data,function(error,mapData){var features=mapData.features;// Draw each parish as a path\nmapLayer.selectAll('path').data(features).enter().append('path').attr('d',path).attr('vector-effect','non-scaling-stroke').style('fill',fillFn).on('mouseover',mouseover).on('mouseout',mouseout).on('click',clicked);});// Get parish name\nfunction nameFn(d){return d&&d.properties?d.properties.parish:null;}// get weekly count\nfunction pCount(d){var week='week'+secretWeekSelector;console.log('WeekCount:'+week);return d.properties[week];}// Get province color\nfunction fillFn(d){var c=pCount(d);return color(c);}// When clicked, zoom in\nfunction clicked(d){var x,y,k;// Compute centroid of the selected path\nif(d&&centered!==d){var centroid=path.centroid(d);x=centroid[0];y=centroid[1];k=4;centered=d;}else{x=width/2;y=height/2;k=1;centered=null;}// Highlight the clicked parish\nmapLayer.selectAll('path').style('fill',function(d){return centered&&d===centered?'#D5708B':fillFn(d);});// Zoom\ng.transition().duration(750).attr('transform','translate('+width/2+','+height/2+')scale('+k+')translate('+-x+','+-y+')');}// --------------- MOUSE EVENTS ---------------\nfunction mouseover(d){// Highlight hovered parish\nd3.select(this).style('fill','orange');// Draw effects\ntextArt(nameFn(d));disCount(pCount(d));}function mouseout(d){// Reset province color\nmapLayer.selectAll('path').style('fill',function(d){return centered&&d===centered?'#D5708B':fillFn(d);});// Remove effect text\neffectLayer.selectAll('text').transition().style('opacity',0).remove();// Clear province name\nbigText.text('');countText.text('');}// ---------------- TEXT STYLING -----------------\nvar BASE_FONT=\"'Helvetica Neue', Helvetica, Arial, sans-serif\";var FONTS=[\"Open Sans\",\"Josefin Slab\",\"Arvo\",\"Lato\",\"Vollkorn\",\"Abril Fatface\",\"Old StandardTT\",\"Droid+Sans\",\"Lobster\",\"Inconsolata\",\"Montserrat\",\"Playfair Display\",\"Karla\",\"Alegreya\",\"Libre Baskerville\",\"Merriweather\",\"Lora\",\"Archivo Narrow\",\"Neuton\",\"Signika\",\"Questrial\",\"Fjalla One\",\"Bitter\",\"letela Round\"];function textArt(text){// Use random font\nvar fontIndex=Math.round(Math.random()*FONTS.length);var fontFamily=FONTS[fontIndex]+', '+BASE_FONT;bigText.style('font-family',fontFamily).text(text);}function disCount(count){var fontFamily=BASE_FONT;countText.style('font-family',fontFamily).text(\"# of plague burials: \"+count);}}},{key:\"render\",value:function render(){var _this=this;return/*#__PURE__*/_jsx(\"svg\",{width:this.props.width,height:this.props.height,ref:function ref(handle){_this.svg=d3.select(handle);}});}}]);return PlagueMap;}(React.Component);export default PlagueMap;","map":{"version":3,"sources":["/Users/homebase/Desktop/dreadful-visitation-site/src/components/PlagueMap.js"],"names":["React","d3","selection","secretWeekSelector","PlagueMap","drawChart","prevProps","prevState","selector","props","console","log","updateChart","svg","g","select","size","mapLayer","color","scaleThreshold","domain","range","pCount","d","week","properties","fillFn","c","all","selectAll","style","width","height","centered","projection","geoMercator","scale","center","translate","path","geoPath","attr","append","on","clicked","effectLayer","classed","chartLayer","bigText","countText","json","data","error","mapData","features","enter","mouseover","mouseout","nameFn","parish","x","y","k","centroid","transition","duration","textArt","disCount","remove","text","BASE_FONT","FONTS","fontIndex","Math","round","random","length","fontFamily","count","handle","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as d3 from 'd3';\nimport '../css/maps.css'\nimport { selection } from 'd3';\n\nlet secretWeekSelector = 1;\n\nclass PlagueMap extends React.Component {\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.selector !== this.props.selector) {\n            console.log('b: ' + this.props.selector)\n\n            this.updateChart();\n        }\n    }\n\n    updateChart() {\n        secretWeekSelector = this.props.selector;\n        console.log('t:' + this.props.selector)\n\n        let svg = this.svg;\n        let g = svg.select('g');\n        console.log(g.size());\n        let mapLayer = g.select('g.map-layer');\n        console.log(mapLayer.size());\n\n        let color = d3.scaleThreshold()\n        .domain([1, 30, 60, 90, 120, 150, 180, 210, 240, 270, 300, 330, 700])\n        .range([\"#efe6b4\",\"#f6d27f\",\"#fdc14a\",\"#fb9d22\",\"#f57e00\",'#ec720f',\"#ea5110\",\"#e22828\",'#bd251d',\"#ab212a\",'#88202a',\"#762334\",\"#4e1824\"]);\n\n        // get weekly count\n        function pCount(d){\n            let week = 'week' + secretWeekSelector;\n            console.log('WeekCount:' + week)\n            return d.properties[week];\n        }\n\n        // Get province color\n        function fillFn(d){\n            let c = pCount(d);\n            return color(c);\n        }\n\n        let all = mapLayer.selectAll('path');\n        console.log(all.size());\n        all.style('fill', function(d){return fillFn(d);});\n    }\n\n    drawChart() {\n        let width = this.props.width,\n        height = this.props.height,\n        centered;\n\n        secretWeekSelector = this.props.selector;\n        console.log('t:' + this.props.selector)\n\n        // Define color scale\n        let color = d3.scaleThreshold()\n        .domain([1, 30, 60, 90, 120, 150, 180, 210, 240, 270, 300, 330, 700])\n        .range([\"#efe6b4\",\"#f6d27f\",\"#fdc14a\",\"#fb9d22\",\"#f57e00\",'#ec720f',\"#ea5110\",\"#e22828\",'#bd251d',\"#ab212a\",'#88202a',\"#762334\",\"#4e1824\"]);\n\n        let projection = d3.geoMercator()\n            .scale(200000)\n            // Center the Map in London\n            .center([-0.08629450633040443, 51.5231191276096])\n            .translate([width / 2, height / 2]);\n\n        let path = d3.geoPath()\n            .projection(projection);\n\n        // Set svg width & height\n        let svg = this.svg\n            .attr('width', width)\n            .attr('height', height);\n\n        // Add background\n        svg.append('rect')\n        .attr('class', 'background')\n        .attr('width', width)\n        .attr('height', height)\n        .on('click', clicked);\n\n        let g = svg.append('g');\n\n        let effectLayer = g.append('g')\n        .classed('effect-layer', true);\n\n        let mapLayer = g.append('g')\n        .classed('map-layer', true);\n\n        let chartLayer = g.append('g')\n            .classed('chart-layer', true)\n\n        let bigText = g.append('text')\n        .classed('big-text', true)\n        .attr('x', 20)\n        .attr('y', 45);\n\n        let countText = g.append('text')\n        .classed('count-text', true)\n        .attr('x', 23)\n        .attr('y', 70);\n\n        // Load map data\n        d3.json(this.props.data, function(error, mapData) {\n            let features = mapData.features;\n        // Draw each parish as a path\n            mapLayer.selectAll('path')\n                .data(features)\n                .enter().append('path')\n                .attr('d', path)\n                .attr('vector-effect', 'non-scaling-stroke')\n                .style('fill', fillFn)\n                .on('mouseover', mouseover)\n                .on('mouseout', mouseout)\n                .on('click', clicked);\n            });\n\n        // Get parish name\n        function nameFn(d){\n            return d && d.properties ? d.properties.parish : null;\n        }\n\n        // get weekly count\n        function pCount(d){\n            let week = 'week' + secretWeekSelector;\n            console.log('WeekCount:' + week)\n            return d.properties[week];\n        }\n\n        // Get province color\n        function fillFn(d){\n            let c = pCount(d);\n            return color(c);\n        }\n\n        // When clicked, zoom in\n        function clicked(d) {\n        let x, y, k;\n\n        // Compute centroid of the selected path\n        if (d && centered !== d) {\n            let centroid = path.centroid(d);\n            x = centroid[0];\n            y = centroid[1];\n            k = 4;\n            centered = d;\n        } else {\n            x = width / 2;\n            y = height / 2;\n            k = 1;\n            centered = null;\n        }\n\n        // Highlight the clicked parish\n        mapLayer.selectAll('path')\n            .style('fill', function(d){return centered && d===centered ? '#D5708B' : fillFn(d);});\n\n        // Zoom\n        g.transition()\n            .duration(750)\n            .attr('transform', 'translate(' + width / 2 + ',' + height / 2 + ')scale(' + k + ')translate(' + -x + ',' + -y + ')');\n        }\n\n        // --------------- MOUSE EVENTS ---------------\n\n        function mouseover(d){\n        // Highlight hovered parish\n        d3.select(this).style('fill', 'orange');\n\n        // Draw effects\n        textArt(nameFn(d));\n        disCount(pCount(d));\n        }\n\n        function mouseout(d){\n        // Reset province color\n        mapLayer.selectAll('path')\n            .style('fill', function(d){return centered && d===centered ? '#D5708B' : fillFn(d);});\n\n        // Remove effect text\n        effectLayer.selectAll('text').transition()\n            .style('opacity', 0)\n            .remove();\n\n        // Clear province name\n        bigText.text('');\n        countText.text('')\n        }\n\n        // ---------------- TEXT STYLING -----------------\n\n        let BASE_FONT = \"'Helvetica Neue', Helvetica, Arial, sans-serif\";\n\n        let FONTS = [\n            \"Open Sans\",\n            \"Josefin Slab\",\n            \"Arvo\",\n            \"Lato\",\n            \"Vollkorn\",\n            \"Abril Fatface\",\n            \"Old StandardTT\",\n            \"Droid+Sans\",\n            \"Lobster\",\n            \"Inconsolata\",\n            \"Montserrat\",\n            \"Playfair Display\",\n            \"Karla\",\n            \"Alegreya\",\n            \"Libre Baskerville\",\n            \"Merriweather\",\n            \"Lora\",\n            \"Archivo Narrow\",\n            \"Neuton\",\n            \"Signika\",\n            \"Questrial\",\n            \"Fjalla One\",\n            \"Bitter\",\n            \"letela Round\"\n        ];\n\n        function textArt(text){\n        // Use random font\n        let fontIndex = Math.round(Math.random() * FONTS.length);\n        let fontFamily = FONTS[fontIndex] + ', ' + BASE_FONT;\n\n        bigText\n            .style('font-family', fontFamily)\n            .text(text);\n        }\n\n        function disCount(count){\n        let fontFamily = BASE_FONT;\n        countText\n            .style('font-family', fontFamily)\n            .text(\"# of plague burials: \" + count);\n\n        }\n    }\n\n    render(){\n        return <svg width={this.props.width} height={this.props.height}\n            ref={handle => {this.svg = d3.select(handle)}}></svg>\n    }\n\n}\n\nexport default PlagueMap;"]},"metadata":{},"sourceType":"module"}