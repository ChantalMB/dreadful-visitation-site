{"ast":null,"code":"var _jsxFileName = \"/Users/homebase/Desktop/HIST3907/dreadful-visitation-site/src/components/StreamChart.js\";\nimport React from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StreamChart extends React.Component {\n  componentDidMount() {\n    this.drawChart();\n  }\n\n  drawChart() {\n    // set the dimensions and margins of the graph\n    var margin = {\n      top: 20,\n      right: 30,\n      bottom: 30,\n      left: 60\n    },\n        width = this.props.width - margin.left - margin.right,\n        height = this.props.height - margin.top - margin.bottom; // append the svg object to the body of the page\n\n    var svg = this.svg.attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\"); // Parse the Data\n    //d3.csv(\"https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/5_OneCatSevNumOrdered_wide.csv\", function(data) {\n\n    d3.csv(this.props.data, function (data) {\n      // List of groups = header of the csv files\n      var keys = data.columns.slice(1); // Add X axis\n\n      var x = d3.scaleLinear().domain([1, 52]).range([0, width]);\n      svg.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x).ticks(52));\n      var gridlines = d3.axisBottom().ticks(52).tickFormat(\"\").tickSize(height).scale(x);\n      svg.append(\"g\").attr(\"class\", \"grid\").call(gridlines); // Add Y axis\n\n      var y = d3.scaleLinear().domain([-750, 750]).range([height, 0]); // color palette\n\n      var color = d3.scaleOrdinal().domain(keys).range([\"#F94D50\", \"#f3722c\", \"#f8961e\", \"#f9844a\", \"#f9c74f\", \"#90be6d\", \"#43aa8b\", \"#4d908e\", \"#277da1\"]); //stack the data?\n\n      var stackedData = d3.stack().offset(d3.stackOffsetSilhouette).keys(keys)(data);\n      var Tooltip = svg.append(\"text\").attr(\"x\", 35).attr(\"y\", 25).style(\"opacity\", 0).style(\"font-size\", 17);\n\n      var mouseover = function (d) {\n        console.log(d);\n        Tooltip.style(\"opacity\", 1);\n        d3.selectAll(\".myArea\").style(\"opacity\", .2);\n        d3.select(this).style(\"stroke\", \"white\").style(\"opacity\", 1);\n      };\n\n      var mousemove = function (d, i) {\n        // Gets the key\n        let grp = keys[i]; // Gets the week\n\n        let mousex = d3.mouse(this);\n        mousex = mousex[0];\n        let invert = Math.floor(x.invert(mousex)); // Sets tooltip to the new string\n\n        Tooltip.text(\"Week \" + invert + \"- \" + grp + \": \" + data[invert - 1][grp]);\n      };\n\n      var mouseleave = function (d) {\n        Tooltip.style(\"opacity\", 0);\n        d3.selectAll(\".myArea\").style(\"opacity\", 1).style(\"stroke\", \"none\");\n      }; // Show the areas\n\n\n      svg.selectAll(\"mylayers\").data(stackedData).enter().append(\"path\").attr(\"class\", \"myArea\").style(\"fill\", function (d) {\n        return color(d.key);\n      }).attr(\"d\", d3.area().curve(d3.curveMonotoneX).x(function (d, i) {\n        return x(d.data.week_number);\n      }).y0(function (d) {\n        return y(d[0]);\n      }).y1(function (d) {\n        return y(d[1]);\n      })).on(\"mouseover\", mouseover).on(\"mousemove\", mousemove).on(\"mouseleave\", mouseleave);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: this.props.width,\n      height: this.props.height,\n      ref: handle => {\n        this.svg = d3.select(handle);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default StreamChart;","map":{"version":3,"sources":["/Users/homebase/Desktop/HIST3907/dreadful-visitation-site/src/components/StreamChart.js"],"names":["React","d3","StreamChart","Component","componentDidMount","drawChart","margin","top","right","bottom","left","width","props","height","svg","attr","append","csv","data","keys","columns","slice","x","scaleLinear","domain","range","call","axisBottom","ticks","gridlines","tickFormat","tickSize","scale","y","color","scaleOrdinal","stackedData","stack","offset","stackOffsetSilhouette","Tooltip","style","mouseover","d","console","log","selectAll","select","mousemove","i","grp","mousex","mouse","invert","Math","floor","text","mouseleave","enter","key","area","curve","curveMonotoneX","week_number","y0","y1","on","render","handle"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as d3 from 'd3';\n\nclass StreamChart extends React.Component {\n    componentDidMount() {\n    this.drawChart();\n}\n\n    drawChart() {\n        // set the dimensions and margins of the graph\n        var margin = {top: 20, right: 30, bottom: 30, left: 60},\n        width = this.props.width - margin.left - margin.right,\n        height = this.props.height - margin.top - margin.bottom;\n\n        // append the svg object to the body of the page\n        var svg = this.svg\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n            .append(\"g\")\n            .attr(\"transform\",\n                \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n        \n\n        // Parse the Data\n        //d3.csv(\"https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/5_OneCatSevNumOrdered_wide.csv\", function(data) {\n        d3.csv(this.props.data, function(data) {\n        // List of groups = header of the csv files\n            var keys = data.columns.slice(1)\n\n            // Add X axis\n            var x = d3.scaleLinear()\n            .domain([1, 52])\n            .range([ 0, width ]);\n\n            svg.append(\"g\")\n                .attr(\"transform\", \"translate(0,\" + height + \")\")\n                .call(d3.axisBottom(x).ticks(52));\n\n\n            var gridlines = d3.axisBottom()\n                .ticks(52)\n                .tickFormat(\"\")\n                .tickSize(height)\n                .scale(x);\n\n            svg.append(\"g\")\n                .attr(\"class\", \"grid\")\n                .call(gridlines)  \n\n            // Add Y axis\n            var y = d3.scaleLinear()\n                .domain([-750, 750])\n                .range([ height, 0 ]);\n            \n           \n            // color palette\n            var color = d3.scaleOrdinal()\n                .domain(keys)\n                .range([\"#F94D50\",\"#f3722c\",\"#f8961e\",\"#f9844a\",\"#f9c74f\",\"#90be6d\",\"#43aa8b\",\"#4d908e\",\"#277da1\"])\n\n            //stack the data?\n            var stackedData = d3.stack()\n                .offset(d3.stackOffsetSilhouette)\n                .keys(keys)\n                (data)\n\n\n            var Tooltip = svg\n                .append(\"text\")\n                .attr(\"x\", 35)\n                .attr(\"y\", 25)\n                .style(\"opacity\", 0)\n                .style(\"font-size\", 17)\n\n            var mouseover = function(d) {\n                console.log(d)\n                Tooltip.style(\"opacity\", 1)\n                d3.selectAll(\".myArea\").style(\"opacity\", .2)\n                d3.select(this)\n                .style(\"stroke\", \"white\")\n                .style(\"opacity\", 1)\n            }\n\n            var mousemove = function(d,i) {\n            // Gets the key\n                let grp = keys[i]\n                // Gets the week\n                let mousex = d3.mouse(this);\n                mousex = mousex[0];\n                let invert = Math.floor(x.invert(mousex));\n\n                // Sets tooltip to the new string\n                Tooltip.text(\"Week \" + invert + \"- \" + grp + \": \"  + data[invert-1][grp]);\n            }\n\n            var mouseleave = function(d) {\n                Tooltip.style(\"opacity\", 0)\n                d3.selectAll(\".myArea\").style(\"opacity\", 1).style(\"stroke\", \"none\")\n            }\n\n            // Show the areas\n            svg\n                .selectAll(\"mylayers\")\n                .data(stackedData)\n                .enter()\n                .append(\"path\")\n                .attr(\"class\", \"myArea\")\n                    .style(\"fill\", function(d) { return color(d.key); })\n                .attr(\"d\", d3.area()\n                    .curve(d3.curveMonotoneX)\n                    .x(function(d, i) { return x(d.data.week_number); })\n                    .y0(function(d) { return y(d[0]); })\n                    .y1(function(d) { return y(d[1]); })\n                )\n                .on(\"mouseover\", mouseover)\n                .on(\"mousemove\", mousemove)\n                .on(\"mouseleave\", mouseleave)\n\n        })\n    }\n\n    render(){\n        return <svg width={this.props.width} height={this.props.height}\n                ref={handle => {this.svg = d3.select(handle)}}></svg>\n    }\n\n}\n\nexport default StreamChart;"]},"metadata":{},"sourceType":"module"}